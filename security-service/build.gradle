plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'academy.digitallab.onlinestore'
version = '1.0.0'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation ('org.springframework.boot:spring-boot-starter-web'){
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
	//JETTY
	compile('org.springframework.boot:spring-boot-starter-jetty')
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'


	//JWT
	compile group: 'com.auth0', name: 'java-jwt', version: '3.8.0'
	//SLEUTH
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

	//ACTUATOR
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	//ADMIN
	compile group: 'de.codecentric', name: 'spring-boot-admin-starter-client', version: '2.2.1'
	//Log4j2
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.2.6.RELEASE'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
configurations {
	runtime.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
}
test {
	useJUnitPlatform()
}
